function [ varargout ] = MaskSelectionWindow( input_args )
%UNTITLED Summary of this function goes here
%   Detailed explanation goes here

ms = findall(0,'tag','maskSelection');
if (isempty(ms))
    ms = addcomponents;
    set(ms.fig,'Visible','on');
    %initialDisp;
else
    figure(ms);
end

% Default output from mask file
varargout{1} = '';
varargout{2} = '';

% Wait for the user to close the GUI
uiwait() 


    function ms = addcomponents
        
        % Add components
        ms.fig = figure('Units', 'normalized', ...,...
            'position', [0.3 0.3 0.3 0.5],...
            'MenuBar', 'none',...
            'Tag', 'MaskSelectionWindow',...
            'NumberTitle','off',...
            'Name','Mask Creation Window',...
            'Resize','on',...
            'Visible','off');
        
        % Settings
        MaskTypePanel = uipanel('BackgroundColor','white',...
            'Parent', ms.fig,...
            'Tag', 'MaskTypePanel',...
            'title', 'Type of Mask',...
            'units', 'normalized',...
            'Position',[0.2, 0.55 0.6 0.4], ...;
            'BackgroundColor',get(ms.fig,'color'))
        MaskDetailsPanel = uipanel('BackgroundColor','white',...
            'Parent', ms.fig,...
            'Tag', 'MaskDetailsPanel',...
            'title', 'Brain Map/Visit Selection',...
            'units', 'normalized',...
            'Position',[0.2, 0.15 0.6 0.4], ...;
            'BackgroundColor',get(ms.fig,'color'))
        
        % Checkbox for type of mask
        MaskTypeButtonGroup = uibuttongroup('Parent',MaskTypePanel,...
            'units', 'normalized',...
            'tag', 'MaskTypeButtonGroup',...
            'Position',[0.1 0.1 0.8 0.8]);
        SelectVisitMask = uicontrol(MaskTypeButtonGroup,...
            'string', 'Single-Visit Mask',...
            'style', 'radiobutton',...
            'units', 'normalized',...
            'Position',[0.1 0.7 0.9 0.3],...
            'callback', @select_visit_mask);
        SelectUnionMask = uicontrol(MaskTypeButtonGroup,...
            'style', 'radiobutton',...
            'string', 'Union Mask',...
            'units', 'normalized',...
            'Position',[0.1 0.4 0.9 0.3],...
            'callback', @select_union_mask);
        SelectIntersectionMask = uicontrol(MaskTypeButtonGroup,...
            'units', 'normalized',...
            'string', 'Intersection Mask',...
            'style', 'radiobutton',...
            'Position',[0.1 0.1 0.9 0.3],...
            'callback', @select_intersection_mask);
        
        % Controlling the Brain/Map and visit selection
        MaskListbox = uicontrol('style', 'listbox',...
            'Parent', MaskDetailsPanel,...
            'Tag', 'MaskListbox',...
            'units', 'normalized',...
            'Position',[0.1, 0.1 0.8 0.8], ...;
            'BackgroundColor',get(ms.fig,'color'))
        
        % Control buttons at bottom
        SaveButton = uicontrol(ms.fig,...
            'style', 'pushbutton',...
            'string', 'Save Mask',...
            'units', 'normalized',...
            'Position',[0.2 0.05 0.2 0.1],...
            'callback', @mask_save_button_callback);
        CancelButton = uicontrol(ms.fig,...
            'style', 'pushbutton',...
            'string', 'Cancel',...
            'units', 'normalized',...
            'Position',[0.6 0.05 0.2 0.1],...
            'callback', @mask_save_cancel_callback);
        
        % Place the visits in the table
        set(findobj('tag', 'MaskListbox'), 'string', input_args)
                
        movegui(ms.fig, 'center')
        
    end

    % When a single visit is selected
    % 1. Make it so that only the first selected visit is still highlighted
    % 2. Disable multiple selection
    function select_visit_mask(hObject, callbackdata)
        
        % Set to only the first selected item
        currently_selected = ms.fig.Children(3).Children.Value;
        if ~isempty(currently_selected)
            ms.fig.Children(3).Children.Value =  ms.fig.Children(3).Children.Value(1);
        else
            ms.fig.Children(3).Children.Value = 1;
        end
        
        % Disable multiple selection
        ms.fig.Children(3).Children.Max = 1;
        
    end

    % When a union is selected
    % 1. enable multiple selection
    function select_union_mask(hObject, callbackdata)
        ms.fig.Children(3).Children.Max = length(input_args);
    end

    % When intersection is selected
    % 1. enable multiple selection
    function select_intersection_mask(hObject, callbackdata)
        ms.fig.Children(3).Children.Max = length(input_args);
    end


    % Function to return the saving parameters
    function mask_save_button_callback(hObject, callbackdata)
        
        % Return the type of findings
        varargout{1} = ms.fig.Children(4).Children.SelectedObject.String;
        
        % Return the selected visits
        currently_selected = ms.fig.Children(3).Children.Value;
        %varargout{2} = {ms.fig.Children(3).Children.String{currently_selected}};
        % for now just returning the number, if in future need visit name
        % then uncomment above
        varargout{2} = currently_selected;
        delete(ms.fig)
        uiresume() 
    end

    % Cancel Function
    function mask_save_cancel_callback(hObject, callbackdata)
        varargout{1} = 'cancel';
        varargout{2} = '';
        delete(ms.fig)
        uiresume() 
    end

end

